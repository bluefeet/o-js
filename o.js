(function(){var f=this,g=f.o,c={};"undefined"!==typeof exports?("undefined"!==typeof module&&module.exports&&(exports=module.exports=c),exports.o=c):f.o=c;c.noConflict=function(){f.o=g;return c};c.reader=function(b,a){a=a||{};a.writer=a.writer||c.writer(b,a);a.predicate=a.predicate||c.predicate(b);return function(){if(!a.predicate.call(this)){if(a.required)throw Error("...");if(void 0!==a["default"]){var d=a["default"];"function"===typeof d&&(d=d.call(this));a.writer.call(this,d)}}return this[b]}};
c.writer=function(b,a){a=a||{};a.option&&(a.isa=a.isa||"boolean");return function(d){a.option&&void 0===d&&(d=!0);a.filter&&(d=a.filter.call(this,d));if(a.isa)if("string"===typeof a.isa){if(typeof d!==a.isa)throw Error("...");}else if(!a.isa.call(this,d))throw Error("...");if(a["extends"]&&!(d instanceof a["extends"]))throw Error("...");this[b]=d;return a.chain||a.option?this:d}};c.accessor=function(b,a){a=a||{};a.writer=a.writer||c.writer(b,a);a.reader=a.reader||c.reader(b,a);return function(b){void 0!==
b&&a.writer.call(this,b);return a.reader.call(this)}};c.predicate=function(b){return function(){return c.has(this,b)}};c.clearer=function(b){return function(){delete this[b]}};c.proxy=function(b,a){return function(){return this[b][a].apply(this[b],arguments)}};c.before=function(b,a){return function(){a.call(this);return b.apply(this,arguments)}};c.after=function(b,a){return function(){var c=b.apply(this,arguments);a.call(this);return c}};c.around=function(b,a){return function(){var c=this,e=Array.prototype.slice.call(arguments);
e.unshift(function(){b.apply(c,arguments)});a.apply(c,e)}};c.extend=function(b,a){var d=c.around(b,a),e=c.merge({},b.prototype,a.prototype);d.prototype=e;return d};c.merge=function(){for(var b=Array.prototype.slice.call(arguments),a=b.shift();b.length;){var d=b.shift(),e;for(e in d)c.has(d,e)&&(a[e]=d[e])}return a};c.clone=function(b){var a=c.merge({},b);a.__proto__=b.__proto__;a.constructor=b.constructor;return a};c.has=function(b,a){return Object.prototype.hasOwnProperty.call(b,a)}}).call(this);
