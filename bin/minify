#!/usr/bin/env perl
use strict;
use warnings FATAL => 'all';

use autodie;
use FindBin qw( $Bin );
use Getopt::Long;
use Pod::Usage qw( pod2usage );
use LWP::UserAgent;

GetOptions(
    'help'       => \my $help,
    'src-file=s' => \my $src_file,
    'min-file=s' => \my $min_file,
    'version=s'  => \my $version,
) or die "Unable to process options.\n";

if ($help) {
    pod2usage( -verbose => 2 );
    exit 0;
}

$src_file ||= "$Bin/../o.js";
$min_file ||= "$Bin/../o-min.js";

print "# src-file: $src_file\n";
print "# min-file: $min_file\n";
print "# version: $version\n" if $version;

open(my $src_fh, '<', $src_file);
my $src_js = do { local $/; <$src_fh> };

my $url = 'http://closure-compiler.appspot.com/compile';
my $ua  = LWP::UserAgent->new();

print "Checking '$src_file' for errors...\n";

my $check_res = $ua->post(
    $url,
    {
        js_code => $src_js,
        compilation_level => 'SIMPLE_OPTIMIZATIONS',
        output_format => 'text',
        output_info => 'errors',
    },
);

my $errors = $check_res->decoded_content();
die "You've got some errors, aborting minification!\n$errors" if $errors =~ m{\S};

print "No errors.\nGenerating version header...\n";

my $version_command = "$Bin/version-header";
$version_command .= " --version=$version" if $version;
my $version_header = `$version_command`;
die "Version header doesn't look right!" if $version_header !~ m{^//.*v\d}s;
$version_header =~ s{\s*$}{}s;

print "Version header generated.\nMinifying...\n";

my $compile_res = $ua->post(
    $url,
    {
        js_code => $src_js,
        compilation_level => 'SIMPLE_OPTIMIZATIONS',
        output_format => 'text',
        output_info => 'compiled_code',
    },
);

my $min_js = $compile_res->decoded_content();

print "Minification done.\nWriting JavaScript to '$min_file'...\n";

$min_js = "$version_header\n$min_js";
open(my $min_fh, '>', $min_file);
print $min_fh $min_js;

print "All done!\n";

__END__

=head1 NAME

minify - Minify a combined o.js file.

=head1 SYNOPSIS

    cd o-js
    bin/minify
    git add o-min.js

=head1 DESCRIPTION

This script takes the combined o.js produced by C<bin/combine> and
produces a minified form of that JavaScript ready for inclusion in
a production web site.

=head1 ARGUMENTS

=head2 help

    bin/minify --help

Shows this documentation.

=head2 src-file

    bin/minify --src-file=<path-to-o-js>

The source, unminified, C<o.js> as produced by C<bin/combine>.
Defaults to C<$script_dir/../o.js>.

=head2 min-file

    bin/minify --min-file=<path-to-o-min-js>

The file to write the minified JavaScript to.  Defaults to
C<$script_dir/../o-min.js>.

=head2 version

    bin/minify --version=<version-tag>

Override the default version that will included in the version header
in the minified JavaScript.
